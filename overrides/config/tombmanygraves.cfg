# Configuration file

allowedobjects {
    # If set to false, graves will no longer be spawned upon players deaths. This does not get rid of any graves currently in-world. (Defaults to true...obviously.)
    B:enableGraves=true
}


chatconfigs {
    # If set to true, a chat message with the player's grave coordinates will be displayed in chat upon their death. (Defaults to false.)
    B:enableChatMessageOnDeath=false
}


colors {
    # This is one of four configs for how the name/mode render when looking at a grave (assuming that config is enabled. (Defaults to 0xFFFFFF)
    S:nameColorWhenForced=0xFFFFFF

    # This is one of four configs for how the name/mode render when looking at a grave (assuming that config is enabled. (Defaults to 0xFF0000)
    S:nameColorWhenYielding=0xFF0000
}


graveconfigs {
    # If set to false, inventory backups will not be kept. Graves can still form (if enabled), but the death inventory lists will not be able to be produced. (Defaults to true.)
    B:allowInventorySaves=true

    # If set to true, all graves formed will be locked. Graves can be toggled between locked & unlocked by the grave's owner/friends. (Defaults to false.)
    B:defaultToLocked=false

    # If set to true, instead ofattempting to place all items back in the player's original slots, the items will instead be placed on the ground like every other grave mod. (Defaults to false.)
    B:dropItemsOnGround=false

    # If true and an item in the grave was originally in a slot that is now not empty, the grave will remove the current item, place the item from the grave in that slot, and then drop the original item on the ground. If false, any item from the grave attempting to fill a non-empty slot will instead be dropped on the ground. (Defaults to true.)
    B:giveItemsInGravePriority=true
}


graveplacement {
    # If true, graves will attempt to place themselves above bodies of water/lava. If a valid location is not present at the top of the fluid, the grave will attempt to find the valid location closest to the point of death while ascending the fluid. Note: setting this to true causes more calculations to be made upon each death, possibly slowing down tick rate if people are dying underwater a lot... (Defaults to false.)
    B:ascendLiquid=false

    # This is the radius that will be searched (centered around the location of death) to find an appropriate block to place the grave. (Radius = abs(max{x,y,z}) Note: if death occurs with y <= 0, it will center its search around y = graveSearchRadius (unless 'startVoidSearchAtOne' is true. (Defaults to 9, max of 32.)
    I:graveSearchRadius=9

    # If true, graves will be able to replace FLOWING lava when created. (Defaults to true).
    B:replaceFlowingLava=true

    # If true, graves will be able to replace FLOWING water when created. (Defaults to true).
    B:replaceFlowingWater=true

    # If true, graves will be able to replace plants (anything that implements IPlantable: grass, crops, etc). (Defaults to true).
    B:replacePlants=true

    # If true, graves will be able to replace STILL water when created. (Defaults to true).
    B:replaceStillLava=true

    # If set to true, the grave will start its search for a valid placement starting at y=1 if the player died with y <= 0. If false, the search will start at y = graveSearchRadius. (Defaults to false).
    B:startGraveSearchAtOne=false
}


graveplayerinteraction {
    # If set to true, graves will be able to be accessed/manipulated by any player - not just the one who owns the grave. (Defaults to false.)
    B:allowGraveRobbing=false

    # When true, whenever a grave is (un)locked, the player will receive a chat message letting them know the current state of the grave. (Defaults to true.)
    B:allowLockingMessages=true
}


graveplayerinteractions {
    # When true, players will be required to sneak while colliding with their grave to obtain their items. When false, just colliding with the grave is enough to get the items back. (Defaults to true).
    B:requireSneaking=true
}


listconfigs {
    # If set to false, inventory lists will not be able to be spawned. Lists already in the game will not be affected. (Defaults to true.)
    B:allowInventoryLists=true
}


logs {
    # If true, the server log will print the location of a player's death each time they die. (Defaults to true)
    B:printDeathLog=true
}


renderoptions {
    # If set to false, the death inventory lists will not show particle effects leading to the grave. (Defaults to true)
    B:allowParticlePath=true

    # When true, this will display both the name of the grave's owner and the current mode of the grave when looking at it. (Defaults to true)
    B:displayGraveName=true

    # If set to true, graves will display their block position when looking at them (useful for admins/mods for debugging purposes. There is also a command to temporarily toggle this effect in-game. (Defaults to false.)
    B:enableGravePositionRender=false

    # If set to false, graves will not be rendered (at all), meaning there will just be an invisible block there. This is useful if a rendering crash is consistently occuring and I haven't had a chance to post a fix yet. (Defaults to true)
    B:enableGraveRendering=true

    # This is the color of the path particles spawned by the death inventory list when you are more than 100 blocks from the grave. (Defaults to 0x000000)
    S:farParticleColor=0x000000

    # If true, all graves will be rendered with a dirt base instead of using the adaptive model. (Defaults to false).
    B:forceDirtRender=false

    # Changing this value determines the type of skull that renders on the grave. 0 = Skeleton, 1 = Wither Skeleton, 2 = Zombie, 3 = The Player Who Owns The Grave, 4 = Creeper. Any value outside of this range will be set to 3 instead. (Defaults to 3.)
    I:graveSkullRenderType=3

    # This is the color of the path particles spawned by the inventory list when you are within 10 blocks of the grave. (Defaults to 0xFFFFFF.)
    S:nearParticleColor=0xFFFFFF

    # If set to true, the deathinventory lists will only show their particle trail if you are sneaking (and the path is turned on). (Defaults to false)
    B:requireSneakForPath=false
}


