# Configuration file

chat {
    # Whether binding a chat recorder allows players to send
    #  and capture messages. You may want to disable this if you
    #  are experiencing abuse.
    B:allowBinding=true

    # Whether formatting codes are allowed in chat messages.
    B:allowFormatting=false

    # Whether mobs are allowed to post chat messages.
    #  Otherwise this is just limited to players.
    B:allowMobs=true

    # Whether offline players are allowed to post chat messages.
    #  Otherwise this is just limited to those who are online players.
    B:allowOffline=true

    # The maximum length a chat message can be.
    # 
    #  Set to 0 to disable
    I:maxLength=100
}


glasses {
    # The dimensions with which to scale the framebuffer texture.
    #  Higher scales result in cleaner renders, with the cost of
    #  a (potentially) lower framerate.
    I:framebufferScale=1
}


kinetic {
    # The cost per launch power
    I:launchCost=0

    # The value to scale the velocity by when flying, helps limit how fast the player can go.
    D:launchElytraScale=0.4

    # Whether to scale the fall distance after launching.
    # 
    #  This means the player will not die from fall damage if they launch themselves
    #  upwards in order to cancel out their negative velocity. This may not work correctly
    #  with mods which provide custom gravity, such as Galacticraft.
    B:launchFallReset=true

    # Whether to reset the floating timer after launching.
    # 
    #  This means the player will not be kicked for flying after using the kinetic augment a lot.
    B:launchFloatReset=true

    # The maximum velocity the kinetic manipulator can apply to you.
    I:launchMax=4

    # The value to scale the y velocity by, helps limit how high the player can go.
    D:launchYScale=0.5

    # The cost per velocity unit.
    D:propelCost=0.0

    # The maximum velocity a minecart can be propelled at.
    D:propelMax=2.0

    # The cost to shoot an arrow per potency.
    I:shootCost=20

    # The cost per block teleported
    I:teleportCost=0

    # The maximum range that endermen can teleport to.
    I:teleportRange=32

    # The cost of walking.
    #  This is multiplied by the distance and speed walked.
    I:walkCost=0

    # The maximum range that the entity can path find to.
    I:walkRange=32

    # The maximum speed that the entity can walk at.
    I:walkSpeed=3
}


##########################################################################################################
# laser
#--------------------------------------------------------------------------------------------------------#
# Config options for the laser module
##########################################################################################################

laser {
    # The energy cost per potency for a laser.
    #  See Plethora.cfg#CostSystem for more info
    D:cost=10.0

    # The damage done to an entity by a laser per potency.
    D:damage=4.0

    # The maximum time in ticks a laser can exist for before it'll despawn.
    I:lifetime=100

    # The maximum power of a laser.
    D:maximumPotency=5.0

    # The minimum power of a laser.
    D:minimumPotency=0.5
}


##########################################################################################################
# miscellaneous
#--------------------------------------------------------------------------------------------------------#
# Various options that don't belong to anything
##########################################################################################################

miscellaneous {
    # Fun rendering overlay for various objects.
    #  Basically I'm slightly vain.
    B:funRender=true
}


scanner {
    # The radius a fully upgraded scanner can get blocks in.
    I:maxRadius=16

    # The radius scanners can get blocks in.
    I:radius=8

    # The additional cost each level incurs for scan().
    I:scanLevelCost=50
}


sensor {
    # The radius a fully upgraded sensor can get entities in.
    I:maxRadius=32

    # The radius sensors can get entities in.
    I:radius=16

    # The additional cost each level incurs for sense().
    I:senseLevelCost=40
}


turtle {
    # The amount of RF required to gain one unit of turtle fuel.
    #  Set to 0 to disable (the default). If enabled, a good default
    #  is 100 (100FE for one fuel unit).
    I:feFuelRatio=0
}


