cfg TurbineMaterials {
    cfg Iron {
        // Iron is special, do not remove or disable items - stuff will break
        Tier = 1
        InertiaMultiplier = 1       // Higher - will take longer to spin up and slow down
        MaxMJPerTick = 10           // Energy produced (steam/fuel calculated from that)
        RegisterBlade = Yes         // Enables registration of blade item (default)
        RegisterRotor = Yes         // Enables registration of blade item (default)
        RegisterKit = No            // Disables registration of upgrade kit item
    }
    cfg Gold {
        Tier = 2
        InertiaMultiplier = 1.1
        MaxMJPerTick = 40
    }
    cfg Steel {
        Tier = 3
        ReqOreDict = ingotSteel     // Will only be registered if this material is present in OD
        InertiaMultiplier = 1.1
        MaxMJPerTick = 80
    }
    cfg Bronze {
        Tier = 3
        ReqOreDict = ingotBronze
        InertiaMultiplier = 1.1
        MaxMJPerTick = 45
    }
    cfg Enderium {
        Tier = 5
        ReqOreDict = ingotEnderium
        InertiaMultiplier = 1.2
        MaxMJPerTick = 160
    }
    cfg Vibrant {
        Tier = 4
        ReqOreDict = ingotVibrantAlloy
        InertiaMultiplier = 1.2
        MaxMJPerTick = 150
    }
    cfg Manyullyn {
        Tier = 5
        ReqMod = tconstruct
        InertiaMultiplier = 1.2
        MaxMJPerTick = 120
    }
    cfg Adv_Alloy {
        Tier = 4
        ReqMod = ic2
        InertiaMultiplier = 1.2
        MaxMJPerTick = 90
    }
}


recipes { // Iron
    X = OD:ingotIron
    B = I:advgenerators:turbine_blade_iron
    R = I:advgenerators:turbine_rotor_iron

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:turbine_iron
    FWF

    smelt: $R => $X * 11 + 0 xp
}

recipes { // Gold
    X = OD:ingotGold
    R = I:advgenerators:turbine_rotor_gold
    I = I:advgenerators:turbine_rotor_iron
    L = I:flint

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    if (HaveMod EnderIO || HaveMod thermalexpansion) {
        if HaveMod EnderIO {
            enderio-smelt: $I + $X + 5000 RF => $R

            // Disabled - can't register bonus exclusions with current stable build of EIO leading to dupe
            // enderio-sag-mill: $R + 2000 RF => OD:ingotIron * 11 + OD:ingotGold NOBONUS
        }
        if HaveMod thermalexpansion {
            TE-smelt: $I + $X + 5000 RF => $R
        }
    } else {
        shapeless: IX => $R
    }

    shapeless: LR => $I

    FWF
    wRw => B:advgenerators:turbine_gold
    FWF

    shapeless: RK => I:advgenerators:turbine_kit_gold
}

if HaveOD ingotSteel { // Steel
    X = OD:ingotSteel
    B = I:advgenerators:turbine_blade_steel
    R = I:advgenerators:turbine_rotor_steel

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:turbine_steel
    FWF

    shapeless: RK => I:advgenerators:turbine_kit_steel
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotBronze { // Bronze
    X = OD:ingotBronze
    B = I:advgenerators:turbine_blade_bronze
    R = I:advgenerators:turbine_rotor_bronze

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:turbine_bronze
    FWF

    shapeless: RK => I:advgenerators:turbine_kit_bronze
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotEnderium { // Enderium
    X = OD:ingotEnderium
    B = I:advgenerators:turbine_blade_enderium
    R = I:advgenerators:turbine_rotor_enderium

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:turbine_enderium
    FWF

    shapeless: RK => I:advgenerators:turbine_kit_enderium
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotVibrantAlloy { // Vibrant
    X = OD:ingotVibrantAlloy
    B = I:advgenerators:turbine_blade_vibrant
    R = I:advgenerators:turbine_rotor_vibrant

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:turbine_vibrant
    FWF

    shapeless: RK => I:advgenerators:turbine_kit_vibrant
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotManyullyn { // Manyullyn
    X = OD:ingotManyullyn
    B = I:advgenerators:turbine_blade_manyullyn
    R = I:advgenerators:turbine_rotor_manyullyn

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:turbine_manyullyn
    FWF

    shapeless: RK => I:advgenerators:turbine_kit_manyullyn
    smelt: $R => $X * 11 + 0 xp
}

if HaveMod ic2 { // Advanced Alloy
    X = I:ic2:crafting@3  // advanced alloy
    Z = I:ic2:crafting@30 // steel shaft
    B = I:advgenerators:turbine_blade_adv_alloy
    R = I:advgenerators:turbine_rotor_adv_alloy

    F = I:advgenerators:iron_frame
    w = I:advgenerators:iron_wiring
    W = I:advgenerators:iron_tubing
    K = I:advgenerators:upgrade_kit

    _XX
    _XX => $B * 4
    __X

    BBB
    BZB => $R
    BBB

    FWF
    wRw => B:advgenerators:turbine_adv_alloy
    FWF

    shapeless: RK => I:advgenerators:turbine_kit_adv_alloy
}
