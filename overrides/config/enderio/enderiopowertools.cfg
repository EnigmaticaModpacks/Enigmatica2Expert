# Configuration file

capacitor {
    I:power_monitor_power_buffer=1000
    S:power_monitor_power_buffer.scaler=FIXED_1
    I:power_monitor_power_intake=10
    S:power_monitor_power_intake.scaler=FIXED_1
    I:power_monitor_power_use=5
    S:power_monitor_power_use.scaler=FIXED_1
}


capbank {
    # The maximum IO per tick for a single tier one capacitor bank. (synced from server) [range: 1 ~ 1000000000, default: 1000]
    I:tier1_maxIO=100000

    # The maximum storage for a single tier one capacitor bank. (synced from server) [range: 1 ~ 2000000000, default: 1000000]
    I:tier1_maxStorage=100000000

    # The maximum IO per tick for a single tier two capacitor bank. (synced from server) [range: 1 ~ 1000000000, default: 5000]
    I:tier2_maxIO=500000

    # The maximum storage for a single tier two capacitor bank. (synced from server) [range: 1 ~ 2000000000, default: 5000000]
    I:tier2_maxStorage=500000000

    # The maximum IO per tick for a single tier three capacitor bank. (synced from server) [range: 1 ~ 1000000000, default: 25000]
    I:tier3_maxIO=5000000

    # The maximum storage for a single tier three capacitor bank. (synced from server) [range: 1 ~ 2000000000, default: 25000000]
    I:tier3_maxStorage=2000000000

    # The maximum IO per tick for a creative capacitor bank. (synced from server) [range: 1 ~ 1000000000, default: 500000]
    I:tierC_maxIO=1000000000

    # The maximum storage for a creative capacitor bank. (synced from server) [range: 1 ~ 2000000000, default: 100000000]
    I:tierC_maxStorage=2000000000
}


gauge {
    # How often (in ticks) the Gauge should be updated. This involves a server roundtrip! (client setting) [range: 1 ~ 200, default: 5]
    I:updateFrequency=5

    # How often (in ticks) the Gauge should query its neighbors for data. (server setting) (synced from server) [range: 1 ~ 200, default: 5]
    I:updateFrequencyLimit=5
}


personal {
    # When true, the capacitor bank item will get a power bar in addition to the gauge on the bank. [default: false]
    B:capacitorBankRenderPowerOverlayOnItem=false
}


