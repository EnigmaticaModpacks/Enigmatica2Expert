conduit {
    # If enabled, conduits will change their light levels based on their contents. (synced from server) [default: false]
    B:dynamicLighting=false

    # If enabled, transparent facades will not block the Beacon's beam. As side effect they will also let through a tiny amount of light. (synced from server) [default: true]
    B:transparentFacadesLetThroughBeaconBeam=true

    # When true: Correct lighting is recalculated (client side) for conduit bundles when transitioning from being hidden behind a facade. This produces better quality rendering but can result in frame stutters when switching to/from a wrench. (client-only setting) [default: false]
    B:updateLightingWhenHidingFacades=false

    energy {
        # If set to false power conduits of different tiers cannot be connected. in this case a block such as a cap. bank is needed to bridge different tiered networks. (synced from server) [default: false]
        B:canDifferentTiersConnect=false

        # Enable per tick sampling on individual power inputs and outputs. This allows slightly more detailed messages from the Conduit Probe but has a negative impact on server performance. (synced from server) [default: false]
        B:detailedTracking=false

        # The maximum IO for the tier 1 power conduit. (synced from server) [range: 1 ~ 1000000000, default: 640]
        I:tier1_maxIO=5000

        # The maximum IO for the tier 2 power conduit. (synced from server) [range: 1 ~ 1000000000, default: 5120]
        I:tier2_maxIO=25000

        # The maximum IO for the tier 3 power conduit. (synced from server) [range: 1 ~ 1000000000, default: 20480]
        I:tier3_maxIO=125000
    }

    redstone {
        # If set to false redstone conduits will look the same whether they are recieving a signal or not. This can help with performance. (synced from server) [default: false]
        B:showState=false
    }

    fluid {
        # Millibuckets per tick extracted by a fluid conduit's auto extracting. (synced from server) [range: 1 ~ 1000000000, default: 50]
        I:tier1_extractRate=50

        # Millibuckets per tick that can pass through a single connection to a fluid conduit. (synced from server) [range: 1 ~ 1000000000, default: 200]
        I:tier1_maxIO=200

        # Millibuckets per tick extracted by a pressurized fluid conduit's auto extracting. (synced from server) [range: 1 ~ 1000000000, default: 100]
        I:tier2_extractRate=100

        # Millibuckets per tick that can pass through a single connection to a pressurized fluid conduit. (synced from server) [range: 1 ~ 1000000000, default: 400]
        I:tier2_maxIO=400

        # Millibuckets per tick extracted by a ender fluid conduit's auto extracting. (synced from server) [range: 1 ~ 1000000000, default: 200]
        I:tier3_extractRate=500

        # Millibuckets per tick that can pass through a single connection to a ender fluid conduit. (synced from server) [range: 1 ~ 1000000000, default: 800]
        I:tier3_maxIO=2000
    }

    item {
        # When extracting from an inventory, how many items should be tried to insert somewhere? Lowering this can increase tps on bigger servers but will slow down extracting from big inventories. Default is one normal chest. Empty slots are not counted. (synced from server) [range: 1 ~ 512, default: 27]
        I:maxSlotCheckPerTick=27

        # When extracting from an inventory, how long should the connection wait until retrying if it couldn't transfer anything? Note that this is per input connection. Increasing this can increase tps on bigger servers but will create awkward pauses until conduits (re-)start transfering items. (synced from server) [range: 10 ~ 500, default: 50]
        I:sleepBetweenFailedTries=50

        # When extracting from an inventory, how often should the connection check if it is in extract mode and its redstone mode allows extracting? Note that this is per input connection. Increasing this can increase tps on bigger servers but will create awkward pauses until conduits (re-)start transfering items. (synced from server) [range: 10 ~ 500, default: 20]
        I:sleepBetweenTries=20

        # If true, 'line of sight' distance rather than conduit path distance is used to calculate priorities. (synced from server) [default: false]
        B:usePhyscialDistance=false
    }

}


